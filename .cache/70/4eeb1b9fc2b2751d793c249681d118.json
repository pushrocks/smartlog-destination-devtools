{"id":"node_modules/@pushrocks/tapbundle/dist/tapbundle.classes.tapwrap.js","dependencies":[{"name":"/Users/philkunz/gitlab/pushrocks_meta/smartlog-destination-devtools/node_modules/@pushrocks/tapbundle/ts/tapbundle.classes.tapwrap.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/philkunz/gitlab/pushrocks_meta/smartlog-destination-devtools/package.json","includedInParent":true,"mtime":1542067438335},{"name":"/Users/philkunz/gitlab/pushrocks_meta/smartlog-destination-devtools/node_modules/@pushrocks/tapbundle/package.json","includedInParent":true,"mtime":1542063791802}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass TapWrap {\n    /**\n     * the constructor\n     */\n    constructor(wrapFunctionArg) {\n        // nothing here\n        this.wrapFunction = wrapFunctionArg;\n    }\n    /**\n     * run the wrapFunction\n     */\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.wrapFunction();\n        });\n    }\n}\nexports.TapWrap = TapWrap;\n","map":{"version":3,"file":"tapbundle.classes.tapwrap.js","sourceRoot":"","sources":["../ts/tapbundle.classes.tapwrap.ts"],"names":[],"mappings":";;;;;;;;;;AAMA,MAAa,OAAO;IAGlB;;OAEG;IACH,YAAY,eAAiC;QAC3C,eAAe;QACf,IAAI,CAAC,YAAY,GAAG,eAAe,CAAC;IACtC,CAAC;IAED;;OAEG;IACG,GAAG;;YACP,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;QAC5B,CAAC;KAAA;CACF;AAjBD,0BAiBC","sourcesContent":["import * as plugins from './tapbundle.plugins';\n\nexport interface ITapWrapFunction {\n  (): Promise<any>;\n}\n\nexport class TapWrap {\n  wrapFunction: ITapWrapFunction;\n\n  /**\n   * the constructor\n   */\n  constructor(wrapFunctionArg: ITapWrapFunction) {\n    // nothing here\n    this.wrapFunction = wrapFunctionArg;\n  }\n\n  /**\n   * run the wrapFunction\n   */\n  async run() {\n    await this.wrapFunction();\n  }\n}\n"]}},"hash":"a8afbab5f1edfb468f3b8f7eefdb3d67","cacheData":{"env":{}}}