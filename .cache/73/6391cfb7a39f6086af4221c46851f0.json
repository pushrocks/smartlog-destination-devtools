{"id":"../node_modules/@pushrocks/smartlog/dist/smartlog.classes.logrouter.js","dependencies":[{"name":"/Users/philkunz/gitlab/pushrocks_meta/smartlog-destination-devtools/node_modules/@pushrocks/smartlog/ts/smartlog.classes.logrouter.ts","includedInParent":true,"mtime":499162500000},{"name":"/Users/philkunz/gitlab/pushrocks_meta/smartlog-destination-devtools/package.json","includedInParent":true,"mtime":1542069011329},{"name":"/Users/philkunz/gitlab/pushrocks_meta/smartlog-destination-devtools/node_modules/@pushrocks/smartlog/package.json","includedInParent":true,"mtime":1542058764035}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass LogRouter {\n    constructor() {\n        /**\n         * all log destinations\n         */\n        this.logDestinations = [];\n    }\n    addLogDestination(logDestination) {\n        this.logDestinations.push(logDestination);\n    }\n    // routes the log according to added logDestinations\n    routeLog(logPackageArg) {\n        for (const logDestination of this.logDestinations) {\n            logDestination.handleLog(logPackageArg);\n        }\n    }\n}\nexports.LogRouter = LogRouter;\n","map":{"version":3,"file":"smartlog.classes.logrouter.js","sourceRoot":"","sources":["../ts/smartlog.classes.logrouter.ts"],"names":[],"mappings":";;AAIA,MAAa,SAAS;IAMpB;QALA;;WAEG;QACK,oBAAe,GAAsB,EAAE,CAAC;IAEjC,CAAC;IAET,iBAAiB,CAAC,cAA+B;QACtD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC5C,CAAC;IAED,oDAAoD;IACpD,QAAQ,CAAC,aAA0B;QACjC,KAAK,MAAM,cAAc,IAAI,IAAI,CAAC,eAAe,EAAE;YACjD,cAAc,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;SACzC;IACH,CAAC;CACF;AAlBD,8BAkBC","sourcesContent":["import * as plugins from './smartlog.plugins';\n\nimport { ILogDestination, ILogPackage } from '@pushrocks/smartlog-interfaces';\n\nexport class LogRouter {\n  /**\n   * all log destinations\n   */\n  private logDestinations: ILogDestination[] = [];\n\n  constructor() {}\n\n  public addLogDestination(logDestination: ILogDestination) {\n    this.logDestinations.push(logDestination);\n  }\n\n  // routes the log according to added logDestinations\n  routeLog(logPackageArg: ILogPackage) {\n    for (const logDestination of this.logDestinations) {\n      logDestination.handleLog(logPackageArg);\n    }\n  }\n}\n"]}},"hash":"5a4057d085fe5f908691337f03ea8a98","cacheData":{"env":{}}}